{"ast":null,"code":"import { take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/account.service\";\nexport let HasRoleDirective = /*#__PURE__*/(() => {\n  class HasRoleDirective {\n    constructor(viewContainerRef, templateRef, accountService) {\n      this.viewContainerRef = viewContainerRef;\n      this.templateRef = templateRef;\n      this.accountService = accountService;\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n        this.user = user;\n      });\n    }\n\n    ngOnInit() {\n      var _a, _b;\n\n      if (!((_a = this.user) === null || _a === void 0 ? void 0 : _a.roles) || this.user == null) {\n        this.viewContainerRef.clear();\n        return;\n      }\n\n      if ((_b = this.user) === null || _b === void 0 ? void 0 : _b.roles.some(r => this.appHasRole.includes(r))) {\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n      } else {\n        this.viewContainerRef.clear();\n      }\n    }\n\n  }\n\n  HasRoleDirective.ɵfac = function HasRoleDirective_Factory(t) {\n    return new (t || HasRoleDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i1.AccountService));\n  };\n\n  HasRoleDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: HasRoleDirective,\n    selectors: [[\"\", \"appHasRole\", \"\"]],\n    inputs: {\n      appHasRole: \"appHasRole\"\n    }\n  });\n  return HasRoleDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}