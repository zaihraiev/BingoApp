{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/account.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../_forms/text-input/text-input.component\";\nimport * as i6 from \"../_forms/date-input/date-input.component\";\nimport * as i7 from \"@angular/common\";\n\nfunction RegisterComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n}\n\nfunction RegisterComponent_li_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r2);\n  }\n}\n\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(accountService, toastr, fb, router) {\n      this.accountService = accountService;\n      this.toastr = toastr;\n      this.fb = fb;\n      this.router = router;\n      this.cancelRegister = new EventEmitter();\n      this.validationErrors = [];\n    }\n\n    ngOnInit() {\n      this.initializeForm();\n      this.maxDate = new Date();\n      this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n    }\n\n    initializeForm() {\n      this.registerForm = this.fb.group({\n        gender: ['male'],\n        username: ['', Validators.required],\n        knownAs: ['', Validators.required],\n        dateOfBirth: ['', Validators.required],\n        city: ['', Validators.required],\n        country: ['', Validators.required],\n        password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n        confirmPassword: ['', [Validators.required, this.matchValues('password')]]\n      });\n    }\n\n    matchValues(matchTo) {\n      return control => {\n        var _a;\n\n        return (control === null || control === void 0 ? void 0 : control.value) === ((_a = control === null || control === void 0 ? void 0 : control.parent) === null || _a === void 0 ? void 0 : _a.controls[matchTo].value) ? null : {\n          isMatching: true\n        };\n      };\n    }\n\n    register() {\n      this.accountService.register(this.registerForm.value).subscribe(response => {\n        this.router.navigateByUrl('/members');\n      }, error => {\n        this.validationErrors = error;\n      });\n    }\n\n    cancel() {\n      this.cancelRegister.emit(false);\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    outputs: {\n      cancelRegister: \"cancelRegister\"\n    },\n    decls: 34,\n    vars: 21,\n    consts: [[\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"text-primary\"], [1, \"mb-3\"], [2, \"margin-right\", \"10px\"], [1, \"form-check-label\"], [\"type\", \"radio\", \"value\", \"male\", \"formControlName\", \"gender\", 1, \"form-check-input\"], [\"type\", \"radio\", \"value\", \"female\", \"formControlName\", \"gender\", 1, \"form-check-input\", \"ms-3\"], [3, \"formControl\", \"label\"], [3, \"maxDate\", \"formControl\", \"label\"], [3, \"formControl\", \"label\", \"type\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"text-danger\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mr-2\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"mr-2\", \"ms-2\", 2, \"background-color\", \"rgb(191, 198, 201)\", 3, \"click\"], [1, \"row\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.registerForm.valid && ctx.register();\n        });\n        i0.ɵɵelementStart(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Sign up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"I am a: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"label\", 4);\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵtext(9, \" Male \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\", 4);\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵtext(12, \" Female \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(13, \"app-text-input\", 7)(14, \"br\")(15, \"app-text-input\", 7)(16, \"br\")(17, \"app-date-input\", 8)(18, \"br\")(19, \"app-text-input\", 7)(20, \"br\")(21, \"app-text-input\", 7)(22, \"br\")(23, \"app-text-input\", 9)(24, \"br\")(25, \"app-text-input\", 9);\n        i0.ɵɵtemplate(26, RegisterComponent_div_26_Template, 1, 0, \"div\", 10);\n        i0.ɵɵelementStart(27, \"ul\", 11);\n        i0.ɵɵtemplate(28, RegisterComponent_li_28_Template, 2, 1, \"li\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 13)(30, \"button\", 14);\n        i0.ɵɵtext(31, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_32_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(33, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"username\"])(\"label\", \"Username\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"knownAs\"])(\"label\", \"Known As\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"maxDate\", ctx.maxDate)(\"formControl\", ctx.registerForm.controls[\"dateOfBirth\"])(\"label\", \"Date Of Birth\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"city\"])(\"label\", \"City\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"country\"])(\"label\", \"Country\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"password\"])(\"label\", \"Password\")(\"type\", \"password\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"confirmPassword\"])(\"label\", \"Confirm Password\")(\"type\", \"password\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validationErrors.length > 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.validationErrors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.RadioControlValueAccessor, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i5.TextInputComponent, i3.FormControlDirective, i6.DateInputComponent, i7.NgIf, i7.NgForOf],\n    styles: [\"\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}