{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nexport let ConfirmService = /*#__PURE__*/(() => {\n  class ConfirmService {\n    constructor(modalService) {\n      this.modalService = modalService;\n    }\n\n    confirm(title = \"Confirmation\", message = \"Are you sure you want to do this?\", btnOkText = 'Ok', btnCancelText = 'Cancel') {\n      const config = {\n        initialState: {\n          title,\n          message,\n          btnOkText,\n          btnCancelText\n        }\n      };\n      this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\n      return new Observable(this.getResult());\n    }\n\n    getResult() {\n      return observer => {\n        const subscription = this.bsModelRef.onHidden.subscribe(() => {\n          observer.next(this.bsModelRef.content.result);\n          observer.complete();\n        });\n        return {\n          unsubscribe() {\n            subscription.unsubscribe();\n          }\n\n        };\n      };\n    }\n\n  }\n\n  ConfirmService.ɵfac = function ConfirmService_Factory(t) {\n    return new (t || ConfirmService)(i0.ɵɵinject(i1.BsModalService));\n  };\n\n  ConfirmService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConfirmService,\n    factory: ConfirmService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConfirmService;\n})();","map":null,"metadata":{},"sourceType":"module"}